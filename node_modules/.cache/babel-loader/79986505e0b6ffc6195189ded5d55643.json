{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/VuNetSystems/src/Movies/AddMovie.js\";\nimport React, { Component } from \"react\";\nimport * as reactbootstrap from \"react-bootstrap\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      year: null,\n      rating: '',\n      duration: '',\n      submit: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    let moviesList = JSON.parse(localStorage.getItem('movies')); // Object.values(org_options).filter(item => item.id === this.props.release_actor_id);\n\n    let currentMovie = Object.values(moviesList).filter(movie => movie.id == this.props.movieId);\n\n    if (Object.keys(currentMovie).length > 0) {\n      let editMovie = currentMovie[0];\n      console.log(editMovie);\n      this.setState({\n        name: editMovie.name,\n        year: editMovie.year,\n        rating: editMovie.rating,\n        duration: editMovie.duration\n      });\n    }\n  } // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.movieId !== this.props.editId) {\n  //\n  //   }\n  // }\n\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      year: date\n    });\n  }\n\n  addMovie(e) {\n    this.setState({\n      submit: true\n    });\n    let moviesList = JSON.parse(localStorage.getItem('movies'));\n    let newMovie = {\n      \"id\": Object.keys(moviesList).length + 1,\n      'name': this.state.name,\n      \"year\": this.state.year,\n      \"rating\": this.state.rating,\n      \"duration\": this.state.duration,\n      \"index\": Object.keys(moviesList).length + 1\n    };\n    console.log(newMovie);\n    moviesList[Object.keys(moviesList).length + 1] = newMovie;\n    localStorage.setItem('movies', JSON.stringify(moviesList));\n    this.props.handleSubmit(e, moviesList);\n  }\n\n  render() {\n    const {\n      name,\n      year,\n      rating,\n      duration,\n      submit\n    } = this.state;\n    return /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#EC661C\",\n        fontSize: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Add movie\"))), /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n      style: {\n        width: \"600px\",\n        height: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: \"15px\",\n        border: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"#EC661C\",\n        fontSize: \"14px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Movie name\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      value: name,\n      type: \"text\",\n      style: {\n        marginBottom: \"15px\",\n        width: \"250px\",\n        borderColor: \"black\",\n        borderWidth: \"3px\"\n      },\n      placeholder: \"Movie name\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    })), submit && name === \"\" && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Movie name field is required\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: \"15px\",\n        border: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"#EC661C\",\n        fontSize: \"14px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Relesed year\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(DateTimePicker, {\n      onChange: e => this.handleDateChange(e),\n      format: \"yyyy\",\n      value: year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })), submit && year === null && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Released year field is required\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: \"15px\",\n        border: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"#EC661C\",\n        fontSize: \"14px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Rating\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"rating\",\n      value: rating,\n      type: \"textarea\",\n      style: {\n        marginBottom: \"15px\",\n        width: \"250px\",\n        borderColor: \"black\",\n        borderWidth: \"3px\"\n      },\n      placeholder: \"Rating\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    })), submit && rating === \"\" && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Rating field is required\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: \"15px\",\n        border: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"#EC661C\",\n        fontSize: \"14px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Duration\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"duration\",\n      value: duration,\n      type: \"textarea\",\n      style: {\n        marginBottom: \"15px\",\n        width: \"250px\",\n        borderColor: \"black\",\n        borderWidth: \"3px\"\n      },\n      placeholder: \"Duration\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    })), submit && duration === \"\" && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Duration field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: \"left\",\n        backgroundColor: \"#EC661C\",\n        borderColor: \"black\",\n        marginBottom: \"25px\",\n        marginTop: \"25px\",\n        width: \"80px\"\n      },\n      type: \"button\",\n      onClick: e => this.props.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: \"right\",\n        backgroundColor: \"#EC661C\",\n        borderColor: \"black\",\n        marginBottom: \"25px\",\n        marginTop: \"25px\",\n        width: \"80px\"\n      },\n      type: \"button\",\n      onClick: e => this.addMovie(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, \"Add\"))));\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/VuNetSystems/src/Movies/AddMovie.js"],"names":["React","Component","reactbootstrap","DateTimePicker","CreateTask","constructor","props","state","name","year","rating","duration","submit","handleChange","bind","handleDateChange","componentDidMount","moviesList","JSON","parse","localStorage","getItem","currentMovie","Object","values","filter","movie","id","movieId","keys","length","editMovie","console","log","setState","e","value","target","date","addMovie","newMovie","setItem","stringify","handleSubmit","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as reactbootstrap from \"react-bootstrap\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      year: null,\n      rating: '',\n      duration: '',\n      submit: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    let moviesList = JSON.parse(localStorage.getItem('movies'))\n    // Object.values(org_options).filter(item => item.id === this.props.release_actor_id);\n    let currentMovie = Object.values(moviesList).filter(movie => movie.id == this.props.movieId)\n    if (Object.keys(currentMovie).length > 0) {\n      let editMovie = currentMovie[0]\n      console.log(editMovie);\n      this.setState({\n        name: editMovie.name,\n        year: editMovie.year,\n        rating: editMovie.rating,\n        duration: editMovie.duration,\n      });\n    }\n\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.movieId !== this.props.editId) {\n  //\n  //   }\n  // }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      year: date\n    });\n  }\n\n  addMovie(e) {\n    this.setState({\n      submit: true\n    });\n    let moviesList = JSON.parse(localStorage.getItem('movies'))\n    let newMovie = {\n      \"id\": Object.keys(moviesList).length + 1,\n      'name': this.state.name,\n      \"year\": this.state.year,\n      \"rating\": this.state.rating,\n      \"duration\": this.state.duration,\n      \"index\": Object.keys(moviesList).length + 1,\n    }\n    console.log(newMovie);\n    moviesList[Object.keys(moviesList).length +1] = newMovie\n    localStorage.setItem('movies', JSON.stringify(moviesList));\n    this.props.handleSubmit(e, moviesList)\n  }\n\n  render() {\n    const { name, year, rating, duration, submit } = this.state;\n    return (\n      <reactbootstrap.Container className=\"pt-5 px-0\">\n        <div style={{ color: \"#EC661C\", fontSize: \"20px\" }}>\n          <span>\n            <h4>{\"Add movie\"}</h4>\n          </span>\n        </div>\n        <reactbootstrap.Form style={{ width: \"600px\", height: \"200px\" }}>\n          <reactbootstrap.FormGroup>\n            <div style={{ marginbottom: \"15px\", border: \"0px\" }}>\n              <label style={{ color: \"#EC661C\", fontSize: \"14px\" }}>\n                {\"Movie name\"}\n                <span style={{ color: \"red\" }}> * </span>\n              </label>\n              <input\n                name=\"name\"\n                value={name}\n                type=\"text\"\n                style={{\n                  marginBottom: \"15px\",\n                  width: \"250px\",\n                  borderColor: \"black\",\n                  borderWidth: \"3px\"\n                }}\n                placeholder={\"Movie name\"}\n                onChange={this.handleChange}\n                autoComplete=\"off\"\n              />\n            </div>\n            {submit && name === \"\" && (\n              <div style={{ color: \"red\", fontSize: \"15px\" }}>\n                {\"Movie name field is required\"}\n              </div>\n            )}\n          </reactbootstrap.FormGroup>\n          <reactbootstrap.FormGroup>\n            <div style={{ marginbottom: \"15px\", border: \"0px\" }}>\n              <label style={{ color: \"#EC661C\", fontSize: \"14px\" }}>\n                {\"Relesed year\"}\n                <span style={{ color: \"red\" }}> * </span>\n              </label>\n              <DateTimePicker\n                onChange={(e) => this.handleDateChange(e)}\n                format=\"yyyy\"\n                value={year}\n              />\n            </div>\n            {submit && year === null && (\n              <div style={{ color: \"red\", fontSize: \"15px\" }}>\n                {\"Released year field is required\"}\n              </div>\n            )}\n          </reactbootstrap.FormGroup>\n          <reactbootstrap.FormGroup>\n            <div style={{ marginbottom: \"15px\", border: \"0px\" }}>\n              <label style={{ color: \"#EC661C\", fontSize: \"14px\" }}>\n                {\"Rating\"}\n                <span style={{ color: \"red\" }}> * </span>\n              </label>\n              <input\n                name=\"rating\"\n                value={rating}\n                type=\"textarea\"\n                style={{\n                  marginBottom: \"15px\",\n                  width: \"250px\",\n                  borderColor: \"black\",\n                  borderWidth: \"3px\"\n                }}\n                placeholder={\"Rating\"}\n                onChange={this.handleChange}\n                autoComplete=\"off\"\n              />\n            </div>\n            {submit && rating === \"\" && (\n              <div style={{ color: \"red\", fontSize: \"15px\" }}>\n                {\"Rating field is required\"}\n              </div>\n            )}\n          </reactbootstrap.FormGroup>\n          <reactbootstrap.FormGroup>\n            <div style={{ marginbottom: \"15px\", border: \"0px\" }}>\n              <label style={{ color: \"#EC661C\", fontSize: \"14px\" }}>\n                {\"Duration\"}\n                <span style={{ color: \"red\" }}> * </span>\n              </label>\n              <input\n                name=\"duration\"\n                value={duration}\n                type=\"textarea\"\n                style={{\n                  marginBottom: \"15px\",\n                  width: \"250px\",\n                  borderColor: \"black\",\n                  borderWidth: \"3px\"\n                }}\n                placeholder={\"Duration\"}\n                onChange={this.handleChange}\n                autoComplete=\"off\"\n              />\n            </div>\n            {submit && duration === \"\" && (\n              <div style={{ color: \"red\", fontSize: \"15px\" }}>\n                {\"Duration field is required\"}\n              </div>\n            )}\n          </reactbootstrap.FormGroup>\n          <div>\n            <reactbootstrap.Button\n              style={{\n                float: \"left\",\n                backgroundColor: \"#EC661C\",\n                borderColor: \"black\",\n                marginBottom: \"25px\",\n                marginTop: \"25px\",\n                width: \"80px\"\n              }}\n              type=\"button\"\n              onClick={(e) => this.props.handleSubmit(e)}\n            >\n              {\"Cancel\"}\n            </reactbootstrap.Button>\n          </div>\n          <div>\n            <reactbootstrap.Button\n              style={{\n                float: \"right\",\n                backgroundColor: \"#EC661C\",\n                borderColor: \"black\",\n                marginBottom: \"25px\",\n                marginTop: \"25px\",\n                width: \"80px\"\n              }}\n              type=\"button\"\n              onClick={(e) => this.addMovie(e)}\n            >\n              {\"Add\"}\n            </reactbootstrap.Button>\n          </div>\n        </reactbootstrap.Form>\n      </reactbootstrap.Container>\n    );\n  }\n}\n\nexport default CreateTask;\n"]},"metadata":{},"sourceType":"module"}